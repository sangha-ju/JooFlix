{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","withRouter","pathname","location","List","Item","current","SLink","to","Header","styled","header","ul","li","props","Link","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","propsTypes","topRated","PropTypes","array","airingToday","bool","isRequired","string","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","Component","TVPresenter","show","original_name","first_air_date","TVContainer","React","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","Form","onSubmit","Input","placeholder","value","onChange","func","form","input","SearchContainer","event","preventDefault","searchByTerm","target","a","DetailPresenter","result","Backdrop","bgImage","backdrop_path","Content","Cover","Data","ItemContainer","Divider","genres","genre","index","name","OverView","overview","object","p","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fe87df6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={ pathname === \"/\" }>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={ pathname === \"/tv\" }>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={ pathname === \"/search\" }>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n))\n\nconst Header = styled.header `\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n\n`;\n\nconst List = styled.ul `\n  display: flex;\n`;\n\nconst Item = styled.li `\n  width: 80px;\n  text-align: center;\n  border-bottom: 5px solid ${ props => props.current ? \"#3498db\" : \"transparent\" };\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link) `\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{ title }</Title>\n        <Grid>{ children }</Grid>\n    </Container>\n)\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nconst Container = styled.div `\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span `\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div `\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\n\nexport default () => (\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">\n            ⏰\n        </span>\n    </Container>\n)\n\n\n\nconst Container = styled.div `\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Message = ({ text, color }) => (\n    <Container>\n        <Text color={ color }>{ text }</Text>\n    </Container>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired\n}\n\nconst Container = styled.div `\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span `\n    color: ${props => props.color};\n`;\n\n export default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image\n                    bgUrl={\n                        imageUrl\n                        ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                        : require(\"../assets/noPosterSmall.png\")\n                    }\n                />\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">\n                        ⭐️\n                    </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>\n                { title.length > 18 ? `${title.substring(0, 18)}...` : title }\n            </Title>\n            <Year>{ year }</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n};\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${ props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom: 5px;\n    right: 5px;\n    position: absolute;\n    opacity: 0;\n    transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover {\n      ${ Image } {\n        opacity: 0.3;\n      }\n      ${ Rating } {\n        opacity: 1;\n      }\n    }\n`;\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n`;\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n    <>\n        <Helmet>\n                <title>Movies | JooFlix</title>\n        </Helmet>\n        { \n            loading ? <Loader /> : (\n                <Container>\n                    { nowPlaying && nowPlaying.length > 0 && (\n                        <Section title=\"Now Playing\">\n                            { nowPlaying.map(movie => (\n                                 <Poster\n                                    key={ movie.id }\n                                    id={ movie.id }\n                                    imageUrl={ movie.poster_path }  \n                                    title={ movie.original_title }\n                                    rating={ movie.vote_average }\n                                    year={ movie.release_date.substring(0, 4) }\n                                    isMovie={ true }\n                                 />\n                            )) }\n                        </Section>\n                    ) }\n                    { upcoming && upcoming.length > 0 && (\n                        <Section title=\"Upcoming Movies\">\n                            { upcoming.map(movie => (\n                                 <Poster\n                                    key={ movie.id }\n                                    id={ movie.id }\n                                    imageUrl={ movie.poster_path }  \n                                    title={ movie.original_title }\n                                    rating={ movie.vote_average }\n                                    year={ movie.release_date.substring(0, 4) }\n                                    isMovie={ true } \n                                 />\n                            )) }\n                        </Section>\n                    ) }\n                    { popular && popular.length > 0 && (\n                        <Section title=\"Popular Movies\">\n                            { popular.map(movie => (\n                                 <Poster \n                                    key={ movie.id }\n                                    id={ movie.id }\n                                    imageUrl={ movie.poster_path }  \n                                    title={ movie.original_title }\n                                    rating={ movie.vote_average }\n                                    year={ movie.release_date.substring(0, 4) }\n                                    isMovie={ true }\n                                 />\n                            )) }\n                        </Section>\n                    ) }\n                     { error && <Message color=\"#e74c3c\" text={ error } /> }\n                </Container>\n            )\n        }\n    </>\n);\n\nHomePresenter.propsTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nconst Container = styled.div `\n    padding: 20px;\n`;\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst aKey = \"7d5fb8b638a62957dfbecdb86edc6eb1\"\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: aKey,\n        language: \"en-US\"\n    }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React, { Component } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={ nowPlaying }\n        upcoming={ upcoming }\n        popular={ popular }\n        error={ error }\n        loading={ loading }\n      />\n    );\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n    <>\n        <Helmet>\n            <title>TV Shows | JooFlix</title>\n        </Helmet>\n        {\n            loading ? <Loader /> : \n            <Container>\n                { topRated && topRated.length > 0 && (\n                <Section title=\"Top Rated Shows\">\n                    { topRated.map(show => (\n                        <Poster \n                            key={ show.id }\n                            id={ show.id }\n                            imageUrl={ show.poster_path }  \n                            title={ show.original_name }\n                            rating={ show.vote_average }\n                            year={ show.first_air_date.substring(0, 4) }                \n                        />\n                    )) }\n                </Section>\n                ) }\n                { popular && popular.length > 0 && (\n                <Section title=\"Popular Shows\">\n                    { popular.map(show => (\n                        <Poster \n                            key={ show.id }\n                            id={ show.id }\n                            imageUrl={ show.poster_path }  \n                            title={ show.original_name }\n                            rating={ show.vote_average }\n                            year={ show.first_air_date.substring(0, 4) }                \n                        />\n                    )) }\n                </Section>\n                ) }\n                { airingToday && airingToday.length > 0 && (\n                <Section title=\"Airing Today Shows\">\n                    { airingToday.map(show => (\n                        <Poster \n                            key={ show.id }\n                            id={ show.id }\n                            imageUrl={ show.poster_path }  \n                            title={ show.original_name }\n                            rating={ show.vote_average }\n                            year={ show.first_air_date.substring(0, 4) }                \n                        />\n                    )) }\n                </Section>\n                ) }\n                { error && <Message color=\"#e74c3c\" text={ error } /> }\n            </Container>\n        }\n    </>\n);\n\nTVPresenter.propsTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nconst Container = styled.div `\n    padding: 20px;\n`;\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\"\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={ topRated }\n        popular={ popular }\n        airingToday={ airingToday }\n        loading={ loading }\n        error={ error }\n      />\n    );\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst SearchPresenter = ({ movieResults, tvResults, searchTerm, handleSubmit, loading, error, updateTerm }) =>\n    <Container>\n        <Helmet>\n            <title>Search | JooFlix</title>\n        </Helmet>\n        <Form onSubmit={ handleSubmit }>\n            <Input placeholder=\"Search Movies or TV Shows...\" value={ searchTerm } onChange={ updateTerm } />\n        </Form>\n        { loading ? (\n            <Loader />\n        ) : (\n            <>\n                { movieResults && movieResults.length > 0 && (\n                    <Section title=\"Movie Results\">\n                        { movieResults.map(movie => (\n                            <Poster \n                                key={ movie.id }\n                                id={ movie.id }\n                                imageUrl={ movie.poster_path }  \n                                title={ movie.original_title }\n                                rating={ movie.vote_average }\n                                year={ movie.release_date.substring(0, 4) }\n                                isMovie={ true }\n                             />\n                        )) }\n                    </Section>\n                ) }\n                { tvResults && tvResults.length > 0 && (\n                    <Section title=\"TV Show Results\">\n                        { tvResults.map(show => (\n                            <Poster \n                                key={ show.id }\n                                id={ show.id }\n                                imageUrl={ show.poster_path }  \n                                title={ show.original_name }\n                                rating={ show.vote_average }\n                                year={ show.first_air_date.substring(0, 4) }                \n                            />\n                        )) }\n                    </Section>\n                ) }\n                { error && <Message color=\"#e74c3c\" text={ error } /> }\n                { tvResults && \n                  movieResults && \n                  tvResults.length === 0 && \n                  movieResults.length === 0 && (\n                  <Message text=\"Noting found\" color=\"#95a5a6\" />\n                ) }\n            </>\n        ) }\n    </Container>\n\nSearchPresenter.propsTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    updateTerm: PropTypes.func.isRequired\n};\n\nconst Container = styled.div `\n    padding: 0px 20px;\n`;\n\nconst Form = styled.form `\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input `\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n    margin-top: 20px;\n`;\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React, { Component } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if(searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    }\n\n    updateTerm = (event) => {\n        const { \n            target: { value } \n        } = event;\n        this.setState({\n            searchTerm: value\n        })\n    }\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        this.setState({ loading: true });\n        try {\n            const { \n                data: { results: movieResults } \n            } = await moviesApi.search(searchTerm);\n            const { \n                data: { results: tvResults } \n            } = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            })\n        } catch {\n            this.setState({\n                error: \"Can't not find results.\"\n            })\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    \n\n    render() {\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n        return (\n            <SearchPresenter \n                movieResults={ movieResults }\n                tvResults={ tvResults }\n                searchTerm={ searchTerm }\n                loading={ loading }\n                error={ error }\n                handleSubmit={ this.handleSubmit }\n                updateTerm={ this.updateTerm }\n            />\n        )\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\n\nconst DetailPresenter = ({ result, loading, error }) =>\n    loading ? (\n        <>\n        <Helmet>\n            <title>Loading | JooFlix</title>\n        </Helmet>\n        <Loader />\n        </>\n    ) : (\n        <Container>\n            <Helmet>\n                <title>\n                {result.original_title ? result.original_title : result.original_name}{\" \"} | NomFlix\n                </title>\n            </Helmet>\n            <Backdrop\n                bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n            />\n            <Content>\n                <Cover\n                    bgImage={\n                        result.poster_path\n                        ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                        : require(\"../../assets/noPosterSmall.png\")\n                    }\n                />\n                <Data>\n                    <Title>\n                        { result.original_title\n                          ? result.original_title\n                          : result.original_name }\n                    </Title>\n                    <ItemContainer>\n                        <Item>\n                            { result.release_date\n                              ? result.release_date.substring(0, 4)\n                              : result.first_air_date.substring(0, 4) }\n                        </Item>\n                        <Divider>•</Divider>\n                        <Item>\n                            { result.genres &&\n                                result.genres.map((genre, index) => \n                                    index === result.genres.length - 1\n                                        ? genre.name\n                                        : `${genre.name} / `\n                                ) }\n                        </Item>\n                    </ItemContainer>\n                    <OverView>{ result.overview }</OverView>\n                </Data>\n            </Content>\n        </Container>\n    )\n\nDetailPresenter.propsTypes = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nconst Container = styled.div `\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div `\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${ props => props.bgImage });\n    background-image: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\nconst Content = styled.div `\n   display: flex;\n   width: 100%;\n   position: relative;\n   z-index: 1;\n   height: 100%;\n`;\n\nconst Cover = styled.div `\n    width: 30%;\n    background-image: url(${ props => props.bgImage });\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div `\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.span `\n    font-size: 32px;\n`;\n\nconst ItemContainer = styled.div `\n    margin: 20px 0;\n`;\n\nconst Item = styled.span ``;\n\nconst Divider = styled.span `\n    margin: 0 10px;\n`;\n\nconst OverView = styled.p `\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n`;\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React, { Component } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends Component {\n    constructor(props) {\n        super(props);\n        \n        const {\n            location: { pathname }\n        } = props;\n        \n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n   \n\n    async componentDidMount() {\n        const { \n            match: { \n                params: { id } \n            },\n            history: { push },\n        } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if(isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result = null;\n        try {\n            if(isMovie) {\n                ({ data: result } = await moviesApi.movieDetail(parsedId));\n            } else {\n                ({ data: result } = await tvApi.showDetail(parsedId));\n            }\n        } catch {\n            this.setState({\n                error: \"Can't find anything.\"\n            });\n        } finally {\n            this.setState({\n                loading: false,\n                result\n            });\n        }\n    }\n\n    render() {\n        const { result, error, loading } = this.state\n        return (\n            <DetailPresenter \n                result={ result }\n                error={ error }\n                loading={ loading }\n            />\n        )\n    }\n}","import React from \"react\";\nimport { HashRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"../Routes/Home\";\nimport TV from \"../Routes/TV\";\nimport Search from \"../Routes/Search\";\nimport Detail from \"../Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/tv\" exact component={TV} />\n                <Route path=\"/search\" exact component={Search} />\n                <Route path=\"/movie/:id\" exact component={Detail} />\n                <Route path=\"/show/:id\" exact component={Detail} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </>\n    </Router>\n)","import { createGlobalStyle } from \"styled-components\";\nimport { reset } from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle `\n    ${ reset }\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n\n    * {\n        box-sizing: border-box;\n    }\n\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 14px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;","import React from 'react';\nimport Router from \"../Components/Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nfunction App() {\n  return (\n   <>\n    <Router />\n    <GlobalStyles />\n   </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport api from \"./api\";\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}